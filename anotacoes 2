# 19/08/2018 - Ansible(rules) e Puppetlab

Ansible

mkdir rules
ansible-galaxy init marvin

cd /etc/ansible/rules/marvin/tasks
-rw-r--r--  1 root root    0 Aug 19 12:43 deploy.yml
-rw-r--r--  1 root root    0 Aug 19 12:43 install_apache.yml
-rw-r--r--  1 root root    0 Aug 19 12:43 install_httpd.yml
-rw-r--r--  1 root root  106 Aug 19 12:40 main.yml
-rw-r--r--  1 root root    0 Aug 19 12:42 prerequisitos.yml

vim main.yml
---
# tasks file for marvin
- name: Garantindo a estrutura web
  hosts: devops docker automation
  vars:
  - texto: "Deploy ok teste 2"
  tasks:
  - include: prerequisitos.yml
  - include: install_apache.yml
  - include: install_httpd.yml
  - include: deploy.yml

vim prerequisitos.yml
- name: Parando o NGINX
  service:
    name: nginx
    state: stopped
  ignore_errors: True

- name: Remover o NGINX - RedHat
  yum: name=nginx state=absent
  when: ansible_os_family == "RedHat"

- name: Remover o NGINX - Debian
  apt: name=nginx state=absent
  when: ansible_os_family == "Debian"

vim install_apache.yml
- name: Instalando o apache - Debian
  apt: name=apache2 state=present update_cache=yes
  when: ansible_os_family == "Debian"

- name: Iniciando o apache - Debian
  service: name=apache2 state=restarted
  when: ansible_os_family == "Debian"

vim install_httpd.yml
- name: Instalando o httpd - RedHat
  yum: name=httpd state=present
  when: ansible_os_family == "RedHat"

- name: Iniciando o httpd - Redhat
  service: name=httpd state=restarted
  when: ansible_os_family == "Redhat"

vim deploy.yml
- name: Criando a pagina no apache
  template:
    src: ../templates/index.html
    dest: /var/www/html/index.html

- name: Baixar uma imagem
  get_url:
    url: https://upload.wikimedia.org/wikipedia/en/thumb/d/d5/Marvin_the_Martian.svg/1200px-Marvin_the_Martian.svg.png
    dest: /var/www/html/marvin.jpg

vim index.html
<h1> Curso de Infra√Ågil </h1>
<marquee> {{texto}} </marquee>
<img src="marvin.jpg" />

Puppet

https://puppet.com/docs/puppet/5.3/puppet_platform.html

wget https://apt.puppetlabs.com/puppet5-release-xenial.deb
sudo dpkg -i puppet5-release-xenial.deb
sudo apt update

sudo rpm -Uvh https://yum.puppet.com/puppet5/puppet5-release-el-7.noarch.rpm


DESAFIO

vim prerequisitos.yml
- name: Baixar repo puppet - Debian
  get_url:
    url: https://apt.puppetlabs.com/puppet5-release-xenial.deb
    dest: /opt/
  when: ansible_os_family == "Debian"

- name: Baixar repo puppet - Redhat
  get_url:
    url: https://yum.puppet.com/puppet5/puppet5-release-el-7.noarch.rpm
    dest: /opt/
  when: ansible_os_family == "RedHat"

vim main.yml
---
# tasks file for puppet
- name: Puppet install repo and agent
  hosts: devops docker automation
  tasks:
  - include: prerequisitos.yml
  - include: install_puppet_debian.yml
  - include: install_puppet_redhat.yml

vim install_puppet_debian.yml
- name: Instalar repo puppet - Debian
  apt:
    deb: /opt/puppet5-release-xenial.deb
  when: ansible_os_family == "Debian"

- name: Instalar agent
  apt: name=puppet-agent state=present update_cache=yes
  when: ansible_os_family == "Debian"

vim install_puppet_redhat.yml
- name: Instalar repo puppet - RedHat
  yum:
    name: /opt/puppet5-release-el-7.noarch.rpm
    state: present
  when: ansible_os_family == "RedHat"

- name: Instalar agent
  yum: name=puppet-agent state=present
  when: ansible_os_family == "RedHat"

awx ansible

PUPPET

puppet resource package ccze

package { 'ccze':
  ensure => 'purged',
}

puppet resource service apache2

puppet resource service apache2 enable=false

puppet resource service apache2 ensure=stopped

puppet resource package puppetserver ensure=present

vim manifest.pp

package { "htop":
        ensure => present,
}

exec { "memoria_free":
        command => "/usr/bin/free -h > /root/memfree"
}

file { "/tmp/memfree":
        source => "/root/memfree",
        ensure => present,
}

$instalar = ["figlet","vim"]

$remover = ["ccze","htop"]

package { $instalar:
	ensure => present,
}

package { $remover:
	ensure => absent,
}

exec { "memoria_free":
	command => "/usr/bin/free -h > /root/memfree"
}

file { "/tmp/memfree":
	source => "/root/memfree",
	ensure => present,
}

puppet resource package pdk ensure=present

pdk new module capuz_vermelho

root@devops:/etc/puppetlabs/code/environments/production/manifests# 

vim site.pp

node "default" {
	include capuz_vermelho
}

root@devops:/etc/puppetlabs/code/modules/capuz_vermelho/files# 

vim puppet.conf

[agent]
environment = production
runinterval = 60

root@devops:/etc/puppetlabs/code/modules/capuz_vermelho/manifests# 

vim init.pp

class capuz_vermelho {
	file {"/etc/puppetlabs/puppet/puppet.conf":
		source => puppet:///modules/capuz_vermelho/puppet.conf",
		ensure => present,
	}
	
	service {'puppet':
		ensure => running,
		enable => true,
		subscribe => File['/etc/puppetlabs/puppet/puppet.conf'],
}

root@devops:/etc/puppetlabs/code/modules/capuz_vermelho/manifests# puppet resource service puppetserver ensure=running enable=true

service { 'puppetserver':
  ensure => 'running',
  enable => 'true',
}

puppet agent -t --server 192.168.99.10

puppet cert list

puppet cert list -a

puppet cert sign docker.salas4linux.com.br

root@docker:/etc/puppetlabs/puppet# puppet agent -t --server devops.salas4linux.com.br

class base {
        case $::osfamily{
                "redhat":{
                        $pacotes = ["epel-release","git","vim","sysstat","htop","sl","figlet","fish","fortune-mod"]
                }
                "debian":{
                        exec{"atualizar_pacotes":
                                command => "/usr/bin/apt update"
                        }
                        $pacotes = ["git","vim","sysstat","htop","cowsay","figlet","fish","fortune-br"]
                }
        }
        package{$pacote:
                ensure => present
        }
}












